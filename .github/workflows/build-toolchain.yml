name: toolchain

on:
  push:
    branches: [ master ]
    paths: [".github/workflows/build-toolchain.yaml", "toolchain/turris-sdk/**"]
  pull_request:
    branches: [ master ]
    paths: [".github/workflows/build-toolchain.yaml", "toolchain/turris-sdk/**"]
  schedule:
    - cron: "0 0 * * *"

jobs:
  turris-sdk:
    strategy:
      matrix:
        device: [omnia]
        tag: [stable, latest]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout git repository"
        uses: actions/checkout@v2

      - name: "Login to DockerHub"
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: "Build Turris SDK"
        run: docker build --build-arg DEVICE=${{ matrix.device }} --build-arg TAG=${{ matrix.tag }} --build-arg WORKSPACE=/github/workspace -t selwtf/turris-sdk:${{ matrix.device }}-${{ matrix.tag }} -f ./toolchain/turris-sdk/dockerfile ./toolchain/turris-sdk
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          DOCKER_BUILDKIT: 1

      - name: "Push container image"
        run: docker push selwtf/turris-sdk:${{ matrix.device }}-${{ matrix.tag }}

      - name: "Retag with Turris OS version / pre-release branch"
        run: docker tag selwtf/turris-sdk:${{ matrix.device }}-${{ matrix.tag }} selwtf/turris-sdk:$tag_detail
        continue-on-error: true

      - name: "Push retagged container image"
        run: docker push selwtf/turris-sdk:$tag_detail
        continue-on-error: true

  deploy-pkg-repo:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout git repository"
        uses: actions/checkout@v2

      - name: "Build Toolchain opkg repo management"
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: selwtf/deploy-pkg-repo
          tags: latest
          build_args: WORKSPACE=/github/workspace
          path: toolchain/pkg-repo
          dockerfile: toolchain/pkg-repo/dockerfile
