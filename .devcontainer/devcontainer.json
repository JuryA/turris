// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/go
{
	"name": "turris-sdk",
	"dockerFile": "dockerfile",
	"runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Use 'settings' to set *default* container specific settings.json values on container create. 
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash",
	},
	
	// Use 'appPort' to create a container with published ports. If the port isn't working, be sure
	// your server accepts connections from all interfaces (0.0.0.0 or '*'), not just localhost.
	// "appPort": [],

	// Link pkgs and build.sh script to dev versions in current vscode workspace.
	"postCreateCommand": "ln -s /workspaces/turris/pkgs /workspace/pkgs && sudo rm /build.sh && sudo ln -s /workspaces/turris/toolchain/turris-sdk/build.sh /build.sh",

	// Uncomment the next line to have VS Code connect as an existing non-root user in the container. 
	// On Linux, by default, the container user's UID/GID will be updated to match your local user. See
	// https://aka.ms/vscode-remote/containers/non-root for details on adding a non-root user if none exist.
	"remoteUser": "turris-build",
	"containerUser": "turris-build",

	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": [
		"eamodio.gitlens",
		"ms-azuretools.vscode-docker",
		"yzhang.markdown-all-in-one",
		"googlecloudtools.cloudcode"
	]
}